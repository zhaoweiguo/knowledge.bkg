user www-data www-data;
worker_processes  8;    #工作进程，根据硬件调整，大于等于cpu核数

error_log  /var/nginx/log/error.log;
pid        /var/nginx/run/nginx.pid;

worker_rlimit_nofile 65535;     #指定进程可以打开的最大描述符.  这个指令是指当一个nginx进程打开的最多文件描述符数目，理论值应该是最多打开文件数（ulimit -n）与nginx进程数相除，但是nginx分配请求并不是那么均匀，所以最好与ulimit -n 的值保持一致 



http {
    include       /etc/nginx/mime.types;

    access_log	/var/nginx/log/access.log;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;
    tcp_nodelay        on;

    # 当使用nginx做反向代理时, 如果设置太小会造成502错误
    # upstream sent too big header while reading response header from upstream
    proxy_buffer_size   128k;
    proxy_buffers   4 256k;
    proxy_busy_buffers_size   256k;

    # 当使用nginx做fastcgi时, 如果设置太小会造成502错误
    # upstream sent too big header while reading response header from upstream
    fastcgi_buffers 8 16k;
    fastcgi_buffer_size 32k;

    # 保存服务器名字的hash表是由指令 server_names_hash_max_size 和 server_names_hash_bucket_size所控制的
    # 如果Nginx给出需要增大 hash max size 或 hash bucket size的提示，那么首要的是增大前一个参数的大小
    # 当nginx server数据太多时, 需要增加此配置(默认是32的倍数)
    server_names_hash_bucket_size 512;


    gzip  on;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";


    include /etc/nginx/sites-enabled/*;

}

# mail {
#     # See sample authentication script at:
#     # http://wiki.nginx.org/NginxImapAuthenticateWithApachePhpScript
# 
#     # auth_http localhost/auth.php;
#     # pop3_capabilities "TOP" "USER";
#     # imap_capabilities "IMAP4rev1" "UIDPLUS";
# 
#     server {
#         listen     localhost:110;
#         protocol   pop3;
#         proxy      on;
#     }
# 
#     server {
#         listen     localhost:143;
#         protocol   imap;
#         proxy      on;
#     }
# }
