12:22:20.784781 <0.412.0> lager_transform:insert_record_attribute([{eof,78},
 {function,70,code_change,3,
  [{clause,70,
    [{var,70,'_OldVsn'},{var,70,'State'},{var,70,'_Extra'}],
    [],
    [{tuple,71,[{atom,71,ok},{var,71,'State'}]}]}]},
 {function,66,terminate,2,
  [{clause,66,
    [{var,66,'_Reason'},{var,66,'_State'}],
    [],
    [{'case',67,
      {tuple,67,
       [{call,67,{atom,67,whereis},[{atom,67,lager_event}]},
        {call,67,{atom,67,whereis},[{atom,67,lager_event}]},
        {call,67,
         {remote,67,{atom,67,lager_config},{atom,67,get}},
         [{tuple,67,[{atom,67,lager_event},{atom,67,loglevel}]},
          {tuple,67,[{integer,67,0},{nil,67}]}]}]},
      [{clause,67,
        [{tuple,67,[{atom,67,undefined},{atom,67,undefined},{var,67,'_'}]}],
        [],
        [{call,67,
          {'fun',67,
           {clauses,
            [{clause,67,[],[],
              [{tuple,67,[{atom,67,error},{atom,67,lager_not_running}]}]}]}},
          []}]},
       {clause,67,
        [{tuple,67,[{atom,67,undefined},{var,67,'_'},{var,67,'_'}]}],
        [],
        [{call,67,
          {'fun',67,
           {clauses,
            [{clause,67,[],[],
              [{tuple,67,
                [{atom,67,error},
                 {tuple,67,
                  [{atom,67,sink_not_configured},
                   {atom,67,lager_event}]}]}]}]}},
          []}]},
       {clause,67,
        [{tuple,67,
          [{var,67,'__Piddemo_lager_server67'},
           {var,67,'_'},
           {tuple,67,
            [{var,67,'__Leveldemo_lager_server67'},
             {var,67,'__Tracesdemo_lager_server67'}]}]}],
        [[{op,67,'orelse',
           {op,67,'/=',
            {op,67,'band',
             {var,67,'__Leveldemo_lager_server67'},
             {integer,67,64}},
            {integer,67,0}},
           {op,67,'/=',{var,67,'__Tracesdemo_lager_server67'},{nil,67}}}]],
        [{call,67,
          {remote,67,{atom,67,lager},{atom,67,do_log}},
          [{atom,67,info},
           {cons,67,
            {tuple,67,[{atom,67,application},{atom,67,demo_lager}]},
            {cons,67,
             {tuple,67,[{atom,67,module},{atom,67,demo_lager_server}]},
             {cons,67,
              {tuple,67,[{atom,67,function},{atom,67,terminate}]},
              {cons,67,
               {tuple,67,[{atom,67,line},{integer,67,67}]},
               {cons,67,
                {tuple,67,
                 [{atom,67,pid},
                  {call,67,
                   {atom,67,pid_to_list},
                   [{call,67,{atom,67,self},[]}]}]},
                {cons,67,
                 {tuple,67,[{atom,67,node},{call,67,{atom,67,node},[]}]},
                 {call,67,{remote,67,{atom,67,lager},{atom,67,md}},[]}}}}}}},
           {string,67,"terminate"},
           {atom,67,none},
           {integer,67,4096},
           {integer,67,64},
           {var,67,'__Leveldemo_lager_server67'},
           {var,67,'__Tracesdemo_lager_server67'},
           {atom,67,lager_event},
           {var,67,'__Piddemo_lager_server67'}]}]},
       {clause,67,[{var,67,'_'}],[],[{atom,67,ok}]}]},
     {atom,68,ok}]}]},
 {function,49,handle_info,2,
  [{clause,49,
    [{var,49,'_Info'},{var,49,'State'}],
    [],
    [{match,50,
      {var,50,'F'},
      {'fun',50,
       {clauses,
        [{clause,50,
          [{var,50,'_'}],
          [],
          [{'case',51,
            {tuple,51,
             [{call,51,{atom,51,whereis},[{atom,51,lager_event}]},
              {call,51,{atom,51,whereis},[{atom,51,lager_event}]},
              {call,51,
               {remote,51,{atom,51,lager_config},{atom,51,get}},
               [{tuple,51,[{atom,51,lager_event},{atom,51,loglevel}]},
                {tuple,51,[{integer,51,0},{nil,51}]}]}]},
            [{clause,51,
              [{tuple,51,
                [{atom,51,undefined},{atom,51,undefined},{var,51,'_'}]}],
              [],
              [{call,51,
                {'fun',51,
                 {clauses,
                  [{clause,51,[],[],
                    [{tuple,51,
                      [{atom,51,error},{atom,51,lager_not_running}]}]}]}},
                []}]},
             {clause,51,
              [{tuple,51,[{atom,51,undefined},{var,51,'_'},{var,51,'_'}]}],
              [],
              [{call,51,
                {'fun',51,
                 {clauses,
                  [{clause,51,[],[],
                    [{tuple,51,
                      [{atom,51,error},
                       {tuple,51,
                        [{atom,51,sink_not_configured},
                         {atom,51,lager_event}]}]}]}]}},
                []}]},
             {clause,51,
              [{tuple,51,
                [{var,51,'__Piddemo_lager_server51'},
                 {var,51,'_'},
                 {tuple,51,
                  [{var,51,'__Leveldemo_lager_server51'},
                   {var,51,'__Tracesdemo_lager_server51'}]}]}],
              [[{op,51,'orelse',
                 {op,51,'/=',
                  {op,51,'band',
                   {var,51,'__Leveldemo_lager_server51'},
                   {integer,51,64}},
                  {integer,51,0}},
                 {op,51,'/=',
                  {var,51,'__Tracesdemo_lager_server51'},
                  {nil,51}}}]],
              [{call,51,
                {remote,51,{atom,51,lager},{atom,51,do_log}},
                [{atom,51,info},
                 {cons,51,
                  {tuple,51,[{atom,51,application},{atom,51,demo_lager}]},
                  {cons,51,
                   {tuple,51,[{atom,51,module},{atom,51,demo_lager_server}]},
                   {cons,51,
                    {tuple,51,[{atom,51,function},{atom,51,handle_info}]},
                    {cons,51,
                     {tuple,51,[{atom,51,line},{integer,51,51}]},
                     {cons,51,
                      {tuple,51,
                       [{atom,51,pid},
                        {call,51,
                         {atom,51,pid_to_list},
                         [{call,51,{atom,51,self},[]}]}]},
                      {cons,51,
                       {tuple,51,[{atom,51,node},{call,51,{atom,51,node},[]}]},
                       {call,51,
                        {remote,51,{atom,51,lager},{atom,51,md}},
                        []}}}}}}},
                 {string,51,
                  "=======>> handle_info _Info=======>> handle_info _Info = ~p"},
                 {cons,51,{var,51,'_Info'},{nil,51}},
                 {integer,51,4096},
                 {integer,51,64},
                 {var,51,'__Leveldemo_lager_server51'},
                 {var,51,'__Tracesdemo_lager_server51'},
                 {atom,51,lager_event},
                 {var,51,'__Piddemo_lager_server51'}]}]},
             {clause,51,[{var,51,'_'}],[],[{atom,51,ok}]}]},
           {atom,59,ok}]}]}}},
     {call,62,
      {remote,62,{atom,62,lists},{atom,62,foreach}},
      [{var,62,'F'},
       {call,62,
        {remote,62,{atom,62,lists},{atom,62,seq}},
        [{integer,62,1},{integer,62,100}]}]},
     {tuple,63,[{atom,63,noreply},{var,63,'State'},{integer,63,100}]}]}]},
 {function,45,handle_cast,2,
  [{clause,45,
    [{var,45,'_Request'},{var,45,'State'}],
    [],
    [{'case',46,
      {tuple,46,
       [{call,46,{atom,46,whereis},[{atom,46,lager_event}]},
        {call,46,{atom,46,whereis},[{atom,46,lager_event}]},
        {call,46,
         {remote,46,{atom,46,lager_config},{atom,46,get}},
         [{tuple,46,[{atom,46,lager_event},{atom,46,loglevel}]},
          {tuple,46,[{integer,46,0},{nil,46}]}]}]},
      [{clause,46,
        [{tuple,46,[{atom,46,undefined},{atom,46,undefined},{var,46,'_'}]}],
        [],
        [{call,46,
          {'fun',46,
           {clauses,
            [{clause,46,[],[],
              [{tuple,46,[{atom,46,error},{atom,46,lager_not_running}]}]}]}},
          []}]},
       {clause,46,
        [{tuple,46,[{atom,46,undefined},{var,46,'_'},{var,46,'_'}]}],
        [],
        [{call,46,
          {'fun',46,
           {clauses,
            [{clause,46,[],[],
              [{tuple,46,
                [{atom,46,error},
                 {tuple,46,
                  [{atom,46,sink_not_configured},
                   {atom,46,lager_event}]}]}]}]}},
          []}]},
       {clause,46,
        [{tuple,46,
          [{var,46,'__Piddemo_lager_server46'},
           {var,46,'_'},
           {tuple,46,
            [{var,46,'__Leveldemo_lager_server46'},
             {var,46,'__Tracesdemo_lager_server46'}]}]}],
        [[{op,46,'orelse',
           {op,46,'/=',
            {op,46,'band',
             {var,46,'__Leveldemo_lager_server46'},
             {integer,46,64}},
            {integer,46,0}},
           {op,46,'/=',{var,46,'__Tracesdemo_lager_server46'},{nil,46}}}]],
        [{call,46,
          {remote,46,{atom,46,lager},{atom,46,do_log}},
          [{atom,46,info},
           {cons,46,
            {tuple,46,[{atom,46,application},{atom,46,demo_lager}]},
            {cons,46,
             {tuple,46,[{atom,46,module},{atom,46,demo_lager_server}]},
             {cons,46,
              {tuple,46,[{atom,46,function},{atom,46,handle_cast}]},
              {cons,46,
               {tuple,46,[{atom,46,line},{integer,46,46}]},
               {cons,46,
                {tuple,46,
                 [{atom,46,pid},
                  {call,46,
                   {atom,46,pid_to_list},
                   [{call,46,{atom,46,self},[]}]}]},
                {cons,46,
                 {tuple,46,[{atom,46,node},{call,46,{atom,46,node},[]}]},
                 {call,46,{remote,46,{atom,46,lager},{atom,46,md}},[]}}}}}}},
           {string,46,"handle_cast _Request"},
           {cons,46,{var,46,'_Request'},{nil,46}},
           {integer,46,4096},
           {integer,46,64},
           {var,46,'__Leveldemo_lager_server46'},
           {var,46,'__Tracesdemo_lager_server46'},
           {atom,46,lager_event},
           {var,46,'__Piddemo_lager_server46'}]}]},
       {clause,46,[{var,46,'_'}],[],[{atom,46,ok}]}]},
     {tuple,47,[{atom,47,noreply},{var,47,'State'}]}]}]},
 {function,41,handle_call,3,
  [{clause,41,
    [{var,41,'_Request'},{var,41,'_From'},{var,41,'State'}],
    [],
    [{'case',42,
      {tuple,42,
       [{call,42,{atom,42,whereis},[{atom,42,lager_event}]},
        {call,42,{atom,42,whereis},[{atom,42,lager_event}]},
        {call,42,
         {remote,42,{atom,42,lager_config},{atom,42,get}},
         [{tuple,42,[{atom,42,lager_event},{atom,42,loglevel}]},
          {tuple,42,[{integer,42,0},{nil,42}]}]}]},
      [{clause,42,
        [{tuple,42,[{atom,42,undefined},{atom,42,undefined},{var,42,'_'}]}],
        [],
        [{call,42,
          {'fun',42,
           {clauses,
            [{clause,42,[],[],
              [{tuple,42,[{atom,42,error},{atom,42,lager_not_running}]}]}]}},
          []}]},
       {clause,42,
        [{tuple,42,[{atom,42,undefined},{var,42,'_'},{var,42,'_'}]}],
        [],
        [{call,42,
          {'fun',42,
           {clauses,
            [{clause,42,[],[],
              [{tuple,42,
                [{atom,42,error},
                 {tuple,42,
                  [{atom,42,sink_not_configured},
                   {atom,42,lager_event}]}]}]}]}},
          []}]},
       {clause,42,
        [{tuple,42,
          [{var,42,'__Piddemo_lager_server42'},
           {var,42,'_'},
           {tuple,42,
            [{var,42,'__Leveldemo_lager_server42'},
             {var,42,'__Tracesdemo_lager_server42'}]}]}],
        [[{op,42,'orelse',
           {op,42,'/=',
            {op,42,'band',
             {var,42,'__Leveldemo_lager_server42'},
             {integer,42,64}},
            {integer,42,0}},
           {op,42,'/=',{var,42,'__Tracesdemo_lager_server42'},{nil,42}}}]],
        [{call,42,
          {remote,42,{atom,42,lager},{atom,42,do_log}},
          [{atom,42,info},
           {cons,42,
            {tuple,42,[{atom,42,application},{atom,42,demo_lager}]},
            {cons,42,
             {tuple,42,[{atom,42,module},{atom,42,demo_lager_server}]},
             {cons,42,
              {tuple,42,[{atom,42,function},{atom,42,handle_call}]},
              {cons,42,
               {tuple,42,[{atom,42,line},{integer,42,42}]},
               {cons,42,
                {tuple,42,
                 [{atom,42,pid},
                  {call,42,
                   {atom,42,pid_to_list},
                   [{call,42,{atom,42,self},[]}]}]},
                {cons,42,
                 {tuple,42,[{atom,42,node},{call,42,{atom,42,node},[]}]},
                 {call,42,{remote,42,{atom,42,lager},{atom,42,md}},[]}}}}}}},
           {string,42,"handle_call _Request = ~p"},
           {cons,42,{var,42,'_Request'},{nil,42}},
           {integer,42,4096},
           {integer,42,64},
           {var,42,'__Leveldemo_lager_server42'},
           {var,42,'__Tracesdemo_lager_server42'},
           {atom,42,lager_event},
           {var,42,'__Piddemo_lager_server42'}]}]},
       {clause,42,[{var,42,'_'}],[],[{atom,42,ok}]}]},
     {tuple,43,[{atom,43,reply},{atom,43,ok},{var,43,'State'}]}]}]},
 {function,36,init,1,
  [{clause,36,
    [{nil,36}],
    [],
    [{'case',37,
      {tuple,37,
       [{call,37,{atom,37,whereis},[{atom,37,lager_event}]},
        {call,37,{atom,37,whereis},[{atom,37,lager_event}]},
        {call,37,
         {remote,37,{atom,37,lager_config},{atom,37,get}},
         [{tuple,37,[{atom,37,lager_event},{atom,37,loglevel}]},
          {tuple,37,[{integer,37,0},{nil,37}]}]}]},
      [{clause,37,
        [{tuple,37,[{atom,37,undefined},{atom,37,undefined},{var,37,'_'}]}],
        [],
        [{call,37,
          {'fun',37,
           {clauses,
            [{clause,37,[],[],
              [{tuple,37,[{atom,37,error},{atom,37,lager_not_running}]}]}]}},
          []}]},
       {clause,37,
        [{tuple,37,[{atom,37,undefined},{var,37,'_'},{var,37,'_'}]}],
        [],
        [{call,37,
          {'fun',37,
           {clauses,
            [{clause,37,[],[],
              [{tuple,37,
                [{atom,37,error},
                 {tuple,37,
                  [{atom,37,sink_not_configured},
                   {atom,37,lager_event}]}]}]}]}},
          []}]},
       {clause,37,
        [{tuple,37,
          [{var,37,'__Piddemo_lager_server37'},
           {var,37,'_'},
           {tuple,37,
            [{var,37,'__Leveldemo_lager_server37'},
             {var,37,'__Tracesdemo_lager_server37'}]}]}],
        [[{op,37,'orelse',
           {op,37,'/=',
            {op,37,'band',
             {var,37,'__Leveldemo_lager_server37'},
             {integer,37,64}},
            {integer,37,0}},
           {op,37,'/=',{var,37,'__Tracesdemo_lager_server37'},{nil,37}}}]],
        [{call,37,
          {remote,37,{atom,37,lager},{atom,37,do_log}},
          [{atom,37,info},
           {cons,37,
            {tuple,37,[{atom,37,application},{atom,37,demo_lager}]},
            {cons,37,
             {tuple,37,[{atom,37,module},{atom,37,demo_lager_server}]},
             {cons,37,
              {tuple,37,[{atom,37,function},{atom,37,init}]},
              {cons,37,
               {tuple,37,[{atom,37,line},{integer,37,37}]},
               {cons,37,
                {tuple,37,
                 [{atom,37,pid},
                  {call,37,
                   {atom,37,pid_to_list},
                   [{call,37,{atom,37,self},[]}]}]},
                {cons,37,
                 {tuple,37,[{atom,37,node},{call,37,{atom,37,node},[]}]},
                 {call,37,{remote,37,{atom,37,lager},{atom,37,md}},[]}}}}}}},
           {string,37,"client process start"},
           {atom,37,none},
           {integer,37,4096},
           {integer,37,64},
           {var,37,'__Leveldemo_lager_server37'},
           {var,37,'__Tracesdemo_lager_server37'},
           {atom,37,lager_event},
           {var,37,'__Piddemo_lager_server37'}]}]},
       {clause,37,[{var,37,'_'}],[],[{atom,37,ok}]}]},
     {tuple,38,[{atom,38,ok},{record,38,state,[]},{integer,38,1000}]}]}]},
 {function,32,stop,0,
  [{clause,32,[],[],
    [{call,32,
      {remote,32,{atom,32,gen_server},{atom,32,call}},
      [{call,32,{atom,32,self},[]},{atom,32,stop}]}]}]},
 {function,29,start_link,0,
  [{clause,29,[],[],
    [{call,30,
      {remote,30,{atom,30,gen_server},{atom,30,start_link}},
      [{atom,30,demo_lager_server},{nil,30},{nil,30}]}]}]},
 {attribute,26,record,{state,[]}},
 {attribute,18,export,
  [{init,1},
   {handle_call,3},
   {handle_cast,2},
   {handle_info,2},
   {terminate,2},
   {code_change,3}]},
 {attribute,15,export,[{start_link,0},{stop,0}]},
 {attribute,12,behaviour,gen_server},
 {attribute,10,author,"zhaoweiguo"},
 {attribute,9,module,demo_lager_server},
 {attribute,1,file,{"lib/demo_lager-0.1.0/src/demo_lager_server.erl",1}}])
Recon tracer rate limit tripped.
{ok,demo_lager_server}
